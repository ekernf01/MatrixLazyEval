% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MatrixLazyEval_core.R
\name{NewLazyMatrix}
\alias{NewLazyMatrix}
\title{Return an empty LazyMatrix.}
\usage{
NewLazyMatrix(components, dim, eval_rule, test = T)
}
\arguments{
\item{components}{Named list containing matrices. Anything with a matrix multiplication operator ought to work.
Notably, you can put another instance of LazyMatrixEval.
Names should come out unscathed when you do make.names to them, and they may not include `t` (reserved for the transpose).}

\item{dim}{Length-2 integer vector giving dimensions of final object.}

\item{eval_rule}{Length-1 character describing how to compute Mx or yM for this matrix (M) given x or y.}

\item{test}{Logical. If TRUE (default), object is tested immediately upon initialization.}
}
\description{
Return an empty LazyMatrix.
}
\details{
eval_rule may only contain `LEFT`, `RIGHT`, names in `components`, and simple arithmetic
operations (`()`, `t`, `-*+`, `%*%`).
 `LEFT` and `RIGHT` specify the interface with the outside world: if your object is M and you perform M %*% x,
 then the value of x is substituted into RIGHT (and an identity matrix for LEFT).
 Like with typical R syntax, asterisk (`*`) means componentwise multiplication, and wrapped in percents
  (`%*%`) it means matrix multiplication.
}
